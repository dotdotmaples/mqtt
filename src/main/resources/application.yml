#访问的根路径
#server:
#    session-timeout: 30
#    port: 8081
#    servlet:
#      context-path: /mqtt
server:
  port: 8088
  servlet:
    context-path: /mqtt-gprs
    
logging:
  level:
    gprs.com.mapper: debug

#公共配置与profiles选择无关 mapperLocations指的路径是src/main/resources
#mybatis:
mybatis-plus:
    mapper-locations: classpath:/mybatis/mapper/*.xml
    #实体扫描，多个package用逗号或者分号分隔
    typeAliasesPackage: gprs.com.entity
spring:
    #单数据源配置
    datasource:
        #alibaba连接池
        type: com.alibaba.druid.pool.DruidDataSource
        driverClassName: com.mysql.jdbc.Driver
        url: jdbc:mysql://127.0.0.1:3306/mqtt?characterEncoding=utf-8&allowMultiQueries=true&useSSL=false&serverTimezone=GMT%2B8
        username: root
        password: root
        initialSize: 1
        minIdle: 3
        maxActive: 50
        # 配置获取连接等待超时的时间
        maxWait: 60000
        # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
        timeBetweenEvictionRunsMillis: 60000
        # 配置一个连接在池中最小生存的时间，单位是毫秒
        minEvictableIdleTimeMillis: 30000
        validationQuery: select 'x'
        testWhileIdle: true
        testOnBorrow: false
        testOnReturn: false
        # 打开PSCache，并且指定每个连接上PSCache的大小
        poolPreparedStatements: true
        maxPoolPreparedStatementPerConnectionSize: 20
        # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
        filters: stat,wall,slf4j
        # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
        connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
        # 合并多个DruidDataSource的监控数据
        #useGlobalDataSourceStat: true
              
    # redis配置
    redis:
        # 数据库索引
        database: 0
        # 服务器地址
        host: 127.0.0.1
        # 服务器连接端口
        port: 6379
        # 链接密码
        password: ejar8888
        # 链接超时时间（毫秒）
        timeout: 60s  # 数据库连接超时时间，2.0 中该参数的类型为Duration，这里在配置的时候需要指明单位
        # 连接池配置，2.0中直接使用jedis或者lettuce配置连接池
        jedis:
            pool:
                # 最大空闲连接数
                max-idle: 500
                # 最小空闲连接数
                min-idle: 50
                # 等待可用连接的最大时间，负数为不限制
                max-wait:  -1s
                # 最大活跃连接数，负数为不限制
                max-active: -1        